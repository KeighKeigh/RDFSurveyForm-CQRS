// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RDFSurveyForm.Data;

#nullable disable

namespace RDFSurveyForm.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20240412054251_userAndGroupRelationship")]
    partial class userAndGroupRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RDFSurveyForm.Model.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StatusSync")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubunitId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubunitId");

                    b.HasIndex("UnitId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EditedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Permission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CRole");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Setup.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Setup.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CategoryPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Limit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Setup.GroupSurvey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransacted")
                        .HasColumnType("bit");

                    b.Property<int?>("SurveyGeneratorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupsId");

                    b.HasIndex("SurveyGeneratorId");

                    b.ToTable("GroupSurvey");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Setup.Groups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Setup.SurveyGenerator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SurveyGenerator");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Setup.SurveyScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CategoryPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Limit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SurveyGeneratorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SurveyGeneratorId");

                    b.ToTable("SurveyScores");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Unit_SubUnit.Subunit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("SubunitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Subunits");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Unit_SubUnit.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EditedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("SubunitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<bool>("UpdatePass")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("GroupsId");

                    b.HasIndex("RoleId");

                    b.HasIndex("SubunitId");

                    b.HasIndex("UnitId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Department", b =>
                {
                    b.HasOne("RDFSurveyForm.Model.Unit_SubUnit.Subunit", "Subunit")
                        .WithMany("Departments")
                        .HasForeignKey("SubunitId");

                    b.HasOne("RDFSurveyForm.Model.Unit_SubUnit.Unit", "Unit")
                        .WithMany("Departments")
                        .HasForeignKey("UnitId");

                    b.Navigation("Subunit");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Setup.GroupSurvey", b =>
                {
                    b.HasOne("RDFSurveyForm.Model.Setup.Groups", "Groups")
                        .WithMany("GroupSurvey")
                        .HasForeignKey("GroupsId");

                    b.HasOne("RDFSurveyForm.Model.Setup.SurveyGenerator", "SurveyGenerator")
                        .WithMany("GroupSurvey")
                        .HasForeignKey("SurveyGeneratorId");

                    b.Navigation("Groups");

                    b.Navigation("SurveyGenerator");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Setup.Groups", b =>
                {
                    b.HasOne("RDFSurveyForm.Model.Setup.Branch", "Branch")
                        .WithMany("Groups")
                        .HasForeignKey("BranchId");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Setup.SurveyScore", b =>
                {
                    b.HasOne("RDFSurveyForm.Model.Setup.SurveyGenerator", "SurveyGenerator")
                        .WithMany("SurveyScore")
                        .HasForeignKey("SurveyGeneratorId");

                    b.Navigation("SurveyGenerator");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Unit_SubUnit.Subunit", b =>
                {
                    b.HasOne("RDFSurveyForm.Model.Unit_SubUnit.Unit", "Unit")
                        .WithMany("Subunits")
                        .HasForeignKey("UnitId");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.User", b =>
                {
                    b.HasOne("RDFSurveyForm.Model.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("RDFSurveyForm.Model.Setup.Groups", "Groups")
                        .WithMany("User")
                        .HasForeignKey("GroupsId");

                    b.HasOne("RDFSurveyForm.Model.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.HasOne("RDFSurveyForm.Model.Unit_SubUnit.Subunit", "Subunit")
                        .WithMany("Users")
                        .HasForeignKey("SubunitId");

                    b.HasOne("RDFSurveyForm.Model.Unit_SubUnit.Unit", "Unit")
                        .WithMany("Users")
                        .HasForeignKey("UnitId");

                    b.Navigation("Department");

                    b.Navigation("Groups");

                    b.Navigation("Role");

                    b.Navigation("Subunit");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Setup.Branch", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Setup.Groups", b =>
                {
                    b.Navigation("GroupSurvey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Setup.SurveyGenerator", b =>
                {
                    b.Navigation("GroupSurvey");

                    b.Navigation("SurveyScore");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Unit_SubUnit.Subunit", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("RDFSurveyForm.Model.Unit_SubUnit.Unit", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Subunits");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
